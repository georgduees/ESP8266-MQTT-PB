/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sat Sep  3 15:06:18 2016. */

#ifndef PB_PROTOCOL_PB_H_INCLUDED
#define PB_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _TemperatureMessage {
    int32_t clientId;
    int32_t temperatureValue;
/* @@protoc_insertion_point(struct:TemperatureMessage) */
} TemperatureMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define TemperatureMessage_init_default          {0, 0}
#define TemperatureMessage_init_zero             {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define TemperatureMessage_clientId_tag          1
#define TemperatureMessage_temperatureValue_tag  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t TemperatureMessage_fields[3];

/* Maximum encoded size of messages (where known) */
#define TemperatureMessage_size                  22

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PROTOCOL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
